# Default values for routehub-client
global:
  customRegistry: ""
  imagePullSecrets:
    - name: 
  redis:
    PORT: 6379
    PASSWORD: ""
    DB: 0

redis:
  image:
    repository: eqalpha/keydb
    tag: latest
  replicaCount: 1
  service:
    type: ClusterIP
    port: 6379

postgres:
  image:
    repository: postgres
    tag: latest
  database: RouteHub
  username: postgres
  password: postgres
  port: 5432
  replicaCount: 1
  service:
    type: ClusterIP
    port: 5432

routehubServer:
  image:
    repository: routehub-server
    tag: latest
  replicaCount: 1
  service:
    type: LoadBalancer
    port: 8080
  livenessProbe:
    path: /healthz
    port: 8080
    failureThreshold: 3
    periodSeconds: 240
    initialDelaySeconds: 30
  environment:
    HOSTING_MODE: REST
    SERVICES_DOMAIN_UTILS_HOST: "http://localhost:9001" # This will be another Deployment soon
    DATABASE_APPLICATION_NAME: RouteHub-GraphQL
    DATABASE_TYPE_MIGRATE: "true"
    DATABASE_TYPE_SEED: "true"
    DATABASE_TYPE_PROVIDER: "postgres"
    DATABASE_SEED_ADMINS_0_SUBJECT: "278978826325721091"
    DATABASE_SEED_ADMINS_1_SUBJECT: "278979034530971651"
    DATABASE_SEED_ORGANIZATION_NAME: "RouteHub"
    DATABASE_SEED_ORGANIZATION_DESCRIPTION: "RouteHub is a GraphQL API for managing routes"
    DATABASE_SEED_ORGANIZATION_URL: "https://r4l.cc"
    DATABASE_SEED_DOMAIN_NAME: "RouteHub Public Shortener"
    DATABASE_SEED_DOMAIN_URL: "https://s.r4l.cc"
    GRAPHQL_PLAYGROUND: "true"
    GRAPHQL_DATALOADER_WAIT: "1ms"
    GRAPHQL_DATALOADER_CACHE: "true"
    GRAPHQL_DATALOADER_LRUE_SIZE: "1000"
    GRAPHQL_DATALOADER_LRUE_EXPIRE: "10m"
    CASBIN_MODEL: "../config/authorization/rbac.model.conf"
    CASBIN_LOG_LEVEL: "DEBUG"
    ZITADEL_CLIENT_ID: "278962924343590915"
    ZITADEL_CALLBACK: "/oauth2/callback"
    ZITADEL_SCOPE: "openid,profile,email"
    ZITADEL_AUTHORIZE_URL: "http://server.proxy.internal:7077/oauth/v2/authorize"
    ZITADEL_TOKEN_URL: "http://server.proxy.internal:7077/oauth/v2/token"
    ZITADEL_ISSUER: "http://server.proxy.internal:7077"
    ZITADEL_DOMAIN: "server.proxy.internal"
    ZITADEL_PORT: "7077"
    ZITADEL_INSECURE: "true"